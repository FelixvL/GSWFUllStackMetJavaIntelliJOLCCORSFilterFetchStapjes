1 database aanmaken
2 op start.spring.io een applicatie samenstellen met
	JPA
	Web
	MySQL
	JDBC
3 importeren in IntelliJ
4 application.properties invullen met:
----------

spring.datasource.url=jdbc:mysql://localhost:3306/abc?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=

spring.jpa.database_platform=org.hibernate.dialect.MySQL5Dialect

# options for spring.jpa.hibernate.ddl-auto: none, validate, update, create, create-drop
spring.jpa.hibernate.ddl-auto=create-drop

server.port=8082

----------

5 dan moet hij starten
6 maak een class aan dat SimpleCORSFilter heet, met als inhoud:
----------
import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Component;

@Component
public class SimpleCORSFilter implements Filter {
    public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain)
            throws IOException, ServletException {
        HttpServletResponse response = (HttpServletResponse) res;
        response.setHeader("Access-Control-Allow-Origin", "*");
        response.setHeader("Access-Control-Allow-Methods", "POST, GET, OPTIONS, DELETE, PUT");
        response.setHeader("Access-Control-Max-Age", "36000");
        response.setHeader("Access-Control-Allow-Headers", "origin, content-type, accept");
        chain.doFilter(req, res);
    }

    public void init(FilterConfig filterConfig) {
    }

    public void destroy() {
    }

}
----------
7 maak een Entiteit  (bestand Trein)
8 maak een Endpoint met een GetMapping (bestand TreinEndpoint)
9 maak een Repository (TreinRepository)
10 maak een autowired tussen TreinEndpoint en TreinRepository

11 maak de frontend mbv fetch

12 In vbeen sla ik een nieuwe trein op in de database via de save methode van de repository
	- in vbtwee heb ik een eigen pathvariable en kan ik via de url een eigen naam kiezen

Nu ben je klaar